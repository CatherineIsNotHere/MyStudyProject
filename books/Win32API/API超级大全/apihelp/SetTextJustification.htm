<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<style><!--
body,table {font-family:"宋体"; font-size: 9pt; line-height:11pt;}
a {text-decoration:none} a:hover {color:red;text-decoration:underline}
--></style>
<title>SetTextJustification</title>
</head>

<body link="#FF0000" vlink="#FF0000" alink="#FF0000" bgcolor="#FFC8C8">
<div align="center"><center>

<table border="0" width="100%" height="22" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" height="16"><a name="SetTextJustification">SetTextJustification</a></td>
  </tr>
</table>
</center></div><div align="center"><center>

<table border="1" width="100%" bordercolorlight="#808080" cellspacing="0"
bordercolordark="#FFFFFF">
  <tr>
    <td width="100%" colspan="2">VB声明</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">Declare Function SetTextJustification Lib &quot;gdi32&quot; 
    Alias &quot;SetTextJustification&quot; (ByVal hdc As Long, ByVal nBreakExtra As Long, 
    ByVal nBreakCount As Long) As Long</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">说明</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">通过指定一个文本行应占据的额外空间，可用这个函数对文本进行两端对齐处理</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">返回值</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">Long，非零表示成功，零表示失败。会设置<a
    href="GetLastError.htm" tppabs="http://personal.hb.cninfo.net/~vbapi/GetLastError.htm">GetLastError</a></td>
  </tr>
  <tr>
    <td width="100%" colspan="2">参数表</td>
  </tr>
  <tr>
    <td width="25%">参数</td>
    <td width="75%">类型及说明</td>
  </tr>
  <tr>
    <td width="25%">hdc</td>
    <td width="75%">Long，设备场景的句柄</td>
  </tr>
  <tr>
    <td width="25%">nBreakExtra</td>
    <td width="75%">Long，描绘时欲添加到字串的额外空间大小</td>
  </tr>
  <tr>
    <td width="25%">nBreakCount</td>
    <td width="75%">Long，用于分散额外空间的分隔字符的数量</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">在VB里使用</td>
  </tr>
  <tr>
    <td width="100%" colspan="2"><p align="left">如使用了这个函数，要确定针对VB窗体或控件清除错误条件</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">注解</td>
  </tr>
  <tr>
    <td width="100%" colspan="2">额外空间由行内各个分隔字符分摊。这里的“分隔字符”是由特定的字体定义的，通常都是空格字符。可用<a
    href="GetTextMetrics.htm" tppabs="http://personal.hb.cninfo.net/~vbapi/GetTextMetrics.htm">GetTextMetrics</a>函数了解一种字体采用的分隔字符是什么。对文本进行两端对齐排列的时候，通常需要采取的操作步骤如下：<br>
    1、用<a href="GetTextExtentPoint.htm" tppabs="http://personal.hb.cninfo.net/~vbapi/GetTextExtentPoint.htm">GetTextExtentPoint32</a>这个API函数计算字串占据的显示范围<br>
    2、决定为了使一个行两端对齐，需要加入多少额外的空间（采用逻辑坐标）。这个空间（或距离）通常等于右页边距减去文本的水平“范围”<br>
    3、计算一行文本中采用多少个间隔字符（通常是空格）<br>
    4、将额外空间以及间隔字符的数量作为参数，调用<a
    name="SetTextJustification">SetTextJustification</a>函数<br>
    5、调用文本绘图（显示）函数<br>
    这个函数在内部维持着一种错误条件，用于纠正对齐过程中出现的误差。这样一来，我们就可以区分出行内不同部分间的额外间距（如行内使用了多种字体）。具体的方法是将行分割成几个段，然后为每一段都调用这个函数。对于一个新行，必须清除这个错误条件，方法是向nBreakExtra和nBreakCount参数传递零值，然后调用这个函数</td>
  </tr>
</table>
</center></div><div align="center"><center>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%"><p align="right"><a href="#SetTextJustification">Top</a></td>
  </tr>
</table>
</center></div>
</body>
</html>
